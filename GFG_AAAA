//_Printall permutations of a string in Java
public class GFG { 
  
    // Function to print all the permutations of str 
    static void printPermutn(String str, String ans) 
    { 
  
        // If string is empty 
        if (str.length() == 0) { 
            System.out.print(ans + " "); 
            return; 
        } 
  
        for (int i = 0; i < str.length(); i++) { 
  
            // ith character of str 
            char ch = str.charAt(i); 
  
            // Rest of the string after excluding  
            // the ith character 
            String ros = str.substring(0, i) +  
                         str.substring(i + 1); 
  
            // Recurvise call 
            printPermutn(ros, ans + ch); 
        } 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        String s = "abb"; 
        printPermutn(s, ""); 
    } 
} 


// OUTPUT : abb abb bab bba bab bba

// Java implementation of the approach 
import java.util.ArrayList; 
  
public class GFG { 
  
    // String array to store keypad characters 
    static final String codes[] 
        = { " ", "abc", "def", 
            "ghi", "jkl", "mno", 
            "pqr", "stu", "vwx", 
            "yz" }; 
  
    // Function that returns an Arraylist 
    // which contains all the generated words 
    public static ArrayList<String> printKeyWords(String str) 
    { 
  
        // If str is empty 
        if (str.length() == 0) { 
            ArrayList<String> baseRes = new ArrayList<>(); 
            baseRes.add(""); 
  
            // Return an Arraylist containing 
            // empty string 
            return baseRes; 
        } 
  
        // First character of str 
        char ch = str.charAt(0); 
  
        // Rest of the characters of str 
        String restStr = str.substring(1); 
  
        ArrayList<String> prevRes = printKeyWords(restStr); 
        ArrayList<String> Res = new ArrayList<>(); 
  
        String code = codes[ch - '0']; 
  
        for (String val : prevRes) { 
  
            for (int i = 0; i < code.length(); i++) { 
                Res.add(code.charAt(i) + val); 
            } 
        } 
        return Res; 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        String str = "23"; 
  
        // Print all the possible words 
        System.out.println(printKeyWords(str)); 
    } 
} 
Output:
[dg, eg, fg, dh, eh, fh, di, ei, fi]


import java.io.*;
import java.util.*;
public class CandidateCode {
    public static void main(String args[] ) throws Exception {
    	//Write code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        
        int noTestCase = Integer.parseInt(br.readLine());        

        while(noTestCase>0){
            String houseSizeString = br.readLine();
            int houseSize = Integer.parseInt(houseSizeString);
            
            String houses = br.readLine();            
            String arr[] = houses.split(" ");
            
            int maxnumber = 0;
            System.out.println("houseSize:"+houseSize);                       
            for(int i = houseSize-1;i>=0;i--){
                for(int j=i-2;j>=0;j--){
                    System.out.println(i+"::"+j);
                    String strNumber = arr[i] + arr[j];
                    int number = Integer.parseInt(strNumber);
                    if(number>maxnumber)
                    maxnumber = number;
                }
            }
            System.out.println("ANS");
            System.out.println(maxnumber);
            noTestCase--;
        }

   }
}
